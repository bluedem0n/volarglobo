<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Provincia', 'doctrine');

/**
 * BaseProvincia
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property string $codigo
 * @property string $nombre
 * @property string $imagen
 * @property integer $status
 * @property string $observacion
 * @property integer $user_id
 * @property string $user_name
 * @property Doctrine_Collection $Ciudad
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Proveedor
 * @property Doctrine_Collection $Ubicacion
 * @property Doctrine_Collection $Hospedaje
 * @property Doctrine_Collection $VehiculoPrecio
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method integer             getEmpresaId()      Returns the current record's "empresa_id" value
 * @method string              getCodigo()         Returns the current record's "codigo" value
 * @method string              getNombre()         Returns the current record's "nombre" value
 * @method string              getImagen()         Returns the current record's "imagen" value
 * @method integer             getStatus()         Returns the current record's "status" value
 * @method string              getObservacion()    Returns the current record's "observacion" value
 * @method integer             getUserId()         Returns the current record's "user_id" value
 * @method string              getUserName()       Returns the current record's "user_name" value
 * @method Doctrine_Collection getCiudad()         Returns the current record's "Ciudad" collection
 * @method sfGuardUser         getSfGuardUser()    Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getProveedor()      Returns the current record's "Proveedor" collection
 * @method Doctrine_Collection getUbicacion()      Returns the current record's "Ubicacion" collection
 * @method Doctrine_Collection getHospedaje()      Returns the current record's "Hospedaje" collection
 * @method Doctrine_Collection getVehiculoPrecio() Returns the current record's "VehiculoPrecio" collection
 * @method Provincia           setId()             Sets the current record's "id" value
 * @method Provincia           setEmpresaId()      Sets the current record's "empresa_id" value
 * @method Provincia           setCodigo()         Sets the current record's "codigo" value
 * @method Provincia           setNombre()         Sets the current record's "nombre" value
 * @method Provincia           setImagen()         Sets the current record's "imagen" value
 * @method Provincia           setStatus()         Sets the current record's "status" value
 * @method Provincia           setObservacion()    Sets the current record's "observacion" value
 * @method Provincia           setUserId()         Sets the current record's "user_id" value
 * @method Provincia           setUserName()       Sets the current record's "user_name" value
 * @method Provincia           setCiudad()         Sets the current record's "Ciudad" collection
 * @method Provincia           setSfGuardUser()    Sets the current record's "sfGuardUser" value
 * @method Provincia           setProveedor()      Sets the current record's "Proveedor" collection
 * @method Provincia           setUbicacion()      Sets the current record's "Ubicacion" collection
 * @method Provincia           setHospedaje()      Sets the current record's "Hospedaje" collection
 * @method Provincia           setVehiculoPrecio() Sets the current record's "VehiculoPrecio" collection
 * 
 * @package    hub-usmjesus
 * @subpackage model
 * @author     Jesus Salazar - usmjesus@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProvincia extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('provincia');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('codigo', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('imagen', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('user_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Ciudad', array(
             'local' => 'id',
             'foreign' => 'provincia_id'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Proveedor', array(
             'local' => 'id',
             'foreign' => 'provincia_id'));

        $this->hasMany('Ubicacion', array(
             'local' => 'id',
             'foreign' => 'provincia_id'));

        $this->hasMany('Hospedaje', array(
             'local' => 'id',
             'foreign' => 'provincia_id'));

        $this->hasMany('VehiculoPrecio', array(
             'local' => 'id',
             'foreign' => 'provincia_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}