<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProveedorSucursal', 'doctrine');

/**
 * BaseProveedorSucursal
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $proveedor_id
 * @property string $nombre
 * @property string $direccion
 * @property string $horario
 * @property integer $user_id
 * @property string $user_name
 * @property Empresa $Empresa
 * @property Proveedor $Proveedor
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $ProveedorDescuento
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getEmpresaId()          Returns the current record's "empresa_id" value
 * @method integer             getProveedorId()        Returns the current record's "proveedor_id" value
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method string              getDireccion()          Returns the current record's "direccion" value
 * @method string              getHorario()            Returns the current record's "horario" value
 * @method integer             getUserId()             Returns the current record's "user_id" value
 * @method string              getUserName()           Returns the current record's "user_name" value
 * @method Empresa             getEmpresa()            Returns the current record's "Empresa" value
 * @method Proveedor           getProveedor()          Returns the current record's "Proveedor" value
 * @method sfGuardUser         getSfGuardUser()        Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getProveedorDescuento() Returns the current record's "ProveedorDescuento" collection
 * @method ProveedorSucursal   setId()                 Sets the current record's "id" value
 * @method ProveedorSucursal   setEmpresaId()          Sets the current record's "empresa_id" value
 * @method ProveedorSucursal   setProveedorId()        Sets the current record's "proveedor_id" value
 * @method ProveedorSucursal   setNombre()             Sets the current record's "nombre" value
 * @method ProveedorSucursal   setDireccion()          Sets the current record's "direccion" value
 * @method ProveedorSucursal   setHorario()            Sets the current record's "horario" value
 * @method ProveedorSucursal   setUserId()             Sets the current record's "user_id" value
 * @method ProveedorSucursal   setUserName()           Sets the current record's "user_name" value
 * @method ProveedorSucursal   setEmpresa()            Sets the current record's "Empresa" value
 * @method ProveedorSucursal   setProveedor()          Sets the current record's "Proveedor" value
 * @method ProveedorSucursal   setSfGuardUser()        Sets the current record's "sfGuardUser" value
 * @method ProveedorSucursal   setProveedorDescuento() Sets the current record's "ProveedorDescuento" collection
 * 
 * @package    hub-usmjesus
 * @subpackage model
 * @author     Jesus Salazar - usmjesus@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProveedorSucursal extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('proveedor_sucursal');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('proveedor_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('direccion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('horario', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('user_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Proveedor', array(
             'local' => 'proveedor_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('ProveedorDescuento', array(
             'local' => 'id',
             'foreign' => 'proveedor_sucursal_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}