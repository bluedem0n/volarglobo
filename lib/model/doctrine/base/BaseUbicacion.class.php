<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Ubicacion', 'doctrine');

/**
 * BaseUbicacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $provincia_id
 * @property integer $ciudad_id
 * @property integer $ciudad_final_id
 * @property string $nombre
 * @property string $direccion
 * @property string $google_map
 * @property string $observacion
 * @property integer $user_id
 * @property string $user_name
 * @property Empresa $Empresa
 * @property Provincia $Provincia
 * @property Ciudad $Ciudad
 * @property Ciudad $Ciudad2
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Globo
 * @property Doctrine_Collection $VehiculoPrecio
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getEmpresaId()       Returns the current record's "empresa_id" value
 * @method integer             getProvinciaId()     Returns the current record's "provincia_id" value
 * @method integer             getCiudadId()        Returns the current record's "ciudad_id" value
 * @method integer             getCiudadFinalId()   Returns the current record's "ciudad_final_id" value
 * @method string              getNombre()          Returns the current record's "nombre" value
 * @method string              getDireccion()       Returns the current record's "direccion" value
 * @method string              getGoogleMap()       Returns the current record's "google_map" value
 * @method string              getObservacion()     Returns the current record's "observacion" value
 * @method integer             getUserId()          Returns the current record's "user_id" value
 * @method string              getUserName()        Returns the current record's "user_name" value
 * @method Empresa             getEmpresa()         Returns the current record's "Empresa" value
 * @method Provincia           getProvincia()       Returns the current record's "Provincia" value
 * @method Ciudad              getCiudad()          Returns the current record's "Ciudad" value
 * @method Ciudad              getCiudad2()         Returns the current record's "Ciudad2" value
 * @method sfGuardUser         getSfGuardUser()     Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getGlobo()           Returns the current record's "Globo" collection
 * @method Doctrine_Collection getVehiculoPrecio()  Returns the current record's "VehiculoPrecio" collection
 * @method Ubicacion           setId()              Sets the current record's "id" value
 * @method Ubicacion           setEmpresaId()       Sets the current record's "empresa_id" value
 * @method Ubicacion           setProvinciaId()     Sets the current record's "provincia_id" value
 * @method Ubicacion           setCiudadId()        Sets the current record's "ciudad_id" value
 * @method Ubicacion           setCiudadFinalId()   Sets the current record's "ciudad_final_id" value
 * @method Ubicacion           setNombre()          Sets the current record's "nombre" value
 * @method Ubicacion           setDireccion()       Sets the current record's "direccion" value
 * @method Ubicacion           setGoogleMap()       Sets the current record's "google_map" value
 * @method Ubicacion           setObservacion()     Sets the current record's "observacion" value
 * @method Ubicacion           setUserId()          Sets the current record's "user_id" value
 * @method Ubicacion           setUserName()        Sets the current record's "user_name" value
 * @method Ubicacion           setEmpresa()         Sets the current record's "Empresa" value
 * @method Ubicacion           setProvincia()       Sets the current record's "Provincia" value
 * @method Ubicacion           setCiudad()          Sets the current record's "Ciudad" value
 * @method Ubicacion           setCiudad2()         Sets the current record's "Ciudad2" value
 * @method Ubicacion           setSfGuardUser()     Sets the current record's "sfGuardUser" value
 * @method Ubicacion           setGlobo()           Sets the current record's "Globo" collection
 * @method Ubicacion           setVehiculoPrecio()  Sets the current record's "VehiculoPrecio" collection
 * 
 * @package    hub-usmjesus
 * @subpackage model
 * @author     Jesus Salazar - usmjesus@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUbicacion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ubicacion');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('provincia_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ciudad_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ciudad_final_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('direccion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('google_map', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('user_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Provincia', array(
             'local' => 'provincia_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Ciudad', array(
             'local' => 'ciudad_id',
             'foreign' => 'id'));

        $this->hasOne('Ciudad as Ciudad2', array(
             'local' => 'ciudad_final_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Globo', array(
             'local' => 'id',
             'foreign' => 'ubicacion_id'));

        $this->hasMany('VehiculoPrecio', array(
             'local' => 'id',
             'foreign' => 'ubicacion_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}