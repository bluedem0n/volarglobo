<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Marca', 'doctrine');

/**
 * BaseMarca
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property string $nombre
 * @property string $descripcion_breve
 * @property integer $status
 * @property string $keywords
 * @property string $imagen
 * @property integer $user_id
 * @property string $user_name
 * @property Empresa $Empresa
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Globo
 * @property Doctrine_Collection $Quemador
 * @property Doctrine_Collection $Canastilla
 * @property Doctrine_Collection $Tanque
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getEmpresaId()         Returns the current record's "empresa_id" value
 * @method string              getNombre()            Returns the current record's "nombre" value
 * @method string              getDescripcionBreve()  Returns the current record's "descripcion_breve" value
 * @method integer             getStatus()            Returns the current record's "status" value
 * @method string              getKeywords()          Returns the current record's "keywords" value
 * @method string              getImagen()            Returns the current record's "imagen" value
 * @method integer             getUserId()            Returns the current record's "user_id" value
 * @method string              getUserName()          Returns the current record's "user_name" value
 * @method Empresa             getEmpresa()           Returns the current record's "Empresa" value
 * @method sfGuardUser         getSfGuardUser()       Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getGlobo()             Returns the current record's "Globo" collection
 * @method Doctrine_Collection getQuemador()          Returns the current record's "Quemador" collection
 * @method Doctrine_Collection getCanastilla()        Returns the current record's "Canastilla" collection
 * @method Doctrine_Collection getTanque()            Returns the current record's "Tanque" collection
 * @method Marca               setId()                Sets the current record's "id" value
 * @method Marca               setEmpresaId()         Sets the current record's "empresa_id" value
 * @method Marca               setNombre()            Sets the current record's "nombre" value
 * @method Marca               setDescripcionBreve()  Sets the current record's "descripcion_breve" value
 * @method Marca               setStatus()            Sets the current record's "status" value
 * @method Marca               setKeywords()          Sets the current record's "keywords" value
 * @method Marca               setImagen()            Sets the current record's "imagen" value
 * @method Marca               setUserId()            Sets the current record's "user_id" value
 * @method Marca               setUserName()          Sets the current record's "user_name" value
 * @method Marca               setEmpresa()           Sets the current record's "Empresa" value
 * @method Marca               setSfGuardUser()       Sets the current record's "sfGuardUser" value
 * @method Marca               setGlobo()             Sets the current record's "Globo" collection
 * @method Marca               setQuemador()          Sets the current record's "Quemador" collection
 * @method Marca               setCanastilla()        Sets the current record's "Canastilla" collection
 * @method Marca               setTanque()            Sets the current record's "Tanque" collection
 * 
 * @package    hub-usmjesus
 * @subpackage model
 * @author     Jesus Salazar - usmjesus@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMarca extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('marca');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('descripcion_breve', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('keywords', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('imagen', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('user_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Globo', array(
             'local' => 'id',
             'foreign' => 'marca_id'));

        $this->hasMany('Quemador', array(
             'local' => 'id',
             'foreign' => 'marca_id'));

        $this->hasMany('Canastilla', array(
             'local' => 'id',
             'foreign' => 'marca_id'));

        $this->hasMany('Tanque', array(
             'local' => 'id',
             'foreign' => 'marca_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'nombre',
             ),
             'uniqueBy' => 
             array(
              0 => 'nombre',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}