<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('HospedajeHabitacion', 'doctrine');

/**
 * BaseHospedajeHabitacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $hospedaje_id
 * @property integer $tipo_habitacion_id
 * @property string $tipo_cama
 * @property integer $cantidad_personas
 * @property string $nombre
 * @property float $precio
 * @property string $foto
 * @property integer $user_id
 * @property string $user_name
 * @property Empresa $Empresa
 * @property Hospedaje $Hospedaje
 * @property TipoHabitacion $TipoHabitacion
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $VueloHospedaje
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getEmpresaId()          Returns the current record's "empresa_id" value
 * @method integer             getHospedajeId()        Returns the current record's "hospedaje_id" value
 * @method integer             getTipoHabitacionId()   Returns the current record's "tipo_habitacion_id" value
 * @method string              getTipoCama()           Returns the current record's "tipo_cama" value
 * @method integer             getCantidadPersonas()   Returns the current record's "cantidad_personas" value
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method float               getPrecio()             Returns the current record's "precio" value
 * @method string              getFoto()               Returns the current record's "foto" value
 * @method integer             getUserId()             Returns the current record's "user_id" value
 * @method string              getUserName()           Returns the current record's "user_name" value
 * @method Empresa             getEmpresa()            Returns the current record's "Empresa" value
 * @method Hospedaje           getHospedaje()          Returns the current record's "Hospedaje" value
 * @method TipoHabitacion      getTipoHabitacion()     Returns the current record's "TipoHabitacion" value
 * @method sfGuardUser         getSfGuardUser()        Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getVueloHospedaje()     Returns the current record's "VueloHospedaje" collection
 * @method HospedajeHabitacion setId()                 Sets the current record's "id" value
 * @method HospedajeHabitacion setEmpresaId()          Sets the current record's "empresa_id" value
 * @method HospedajeHabitacion setHospedajeId()        Sets the current record's "hospedaje_id" value
 * @method HospedajeHabitacion setTipoHabitacionId()   Sets the current record's "tipo_habitacion_id" value
 * @method HospedajeHabitacion setTipoCama()           Sets the current record's "tipo_cama" value
 * @method HospedajeHabitacion setCantidadPersonas()   Sets the current record's "cantidad_personas" value
 * @method HospedajeHabitacion setNombre()             Sets the current record's "nombre" value
 * @method HospedajeHabitacion setPrecio()             Sets the current record's "precio" value
 * @method HospedajeHabitacion setFoto()               Sets the current record's "foto" value
 * @method HospedajeHabitacion setUserId()             Sets the current record's "user_id" value
 * @method HospedajeHabitacion setUserName()           Sets the current record's "user_name" value
 * @method HospedajeHabitacion setEmpresa()            Sets the current record's "Empresa" value
 * @method HospedajeHabitacion setHospedaje()          Sets the current record's "Hospedaje" value
 * @method HospedajeHabitacion setTipoHabitacion()     Sets the current record's "TipoHabitacion" value
 * @method HospedajeHabitacion setSfGuardUser()        Sets the current record's "sfGuardUser" value
 * @method HospedajeHabitacion setVueloHospedaje()     Sets the current record's "VueloHospedaje" collection
 * 
 * @package    hub-usmjesus
 * @subpackage model
 * @author     Jesus Salazar - usmjesus@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHospedajeHabitacion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('hospedaje_habitacion');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('hospedaje_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('tipo_habitacion_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('tipo_cama', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('cantidad_personas', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('precio', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             'scale' => '2',
             ));
        $this->hasColumn('foto', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('user_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Hospedaje', array(
             'local' => 'hospedaje_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('TipoHabitacion', array(
             'local' => 'tipo_habitacion_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('VueloHospedaje', array(
             'local' => 'id',
             'foreign' => 'hospedaje_habitacion_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}