<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Globo', 'doctrine');

/**
 * BaseGlobo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $ubicacion_id
 * @property integer $marca_id
 * @property integer $canastilla_id
 * @property integer $quemador_id
 * @property string $modelo
 * @property string $numero_serie
 * @property string $nombre
 * @property float $peso_limite
 * @property float $peso_max_vacio
 * @property float $peso_max_pasajeros
 * @property float $combustible
 * @property integer $tamano
 * @property integer $cantidad_tanques
 * @property integer $capacidad
 * @property string $certificado
 * @property string $descripcion
 * @property string $observacion
 * @property string $orden
 * @property string $imagen
 * @property integer $status
 * @property date $mantenimiento_proximo
 * @property date $mantenimiento_ultimo
 * @property integer $user_id
 * @property string $user_name
 * @property Empresa $Empresa
 * @property Marca $Marca
 * @property Canastilla $Canastilla
 * @property Quemador $Quemador
 * @property Ubicacion $Ubicacion
 * @property Doctrine_Collection $MantenimientoGlobo
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method integer             getEmpresaId()             Returns the current record's "empresa_id" value
 * @method integer             getUbicacionId()           Returns the current record's "ubicacion_id" value
 * @method integer             getMarcaId()               Returns the current record's "marca_id" value
 * @method integer             getCanastillaId()          Returns the current record's "canastilla_id" value
 * @method integer             getQuemadorId()            Returns the current record's "quemador_id" value
 * @method string              getModelo()                Returns the current record's "modelo" value
 * @method string              getNumeroSerie()           Returns the current record's "numero_serie" value
 * @method string              getNombre()                Returns the current record's "nombre" value
 * @method float               getPesoLimite()            Returns the current record's "peso_limite" value
 * @method float               getPesoMaxVacio()          Returns the current record's "peso_max_vacio" value
 * @method float               getPesoMaxPasajeros()      Returns the current record's "peso_max_pasajeros" value
 * @method float               getCombustible()           Returns the current record's "combustible" value
 * @method integer             getTamano()                Returns the current record's "tamano" value
 * @method integer             getCantidadTanques()       Returns the current record's "cantidad_tanques" value
 * @method integer             getCapacidad()             Returns the current record's "capacidad" value
 * @method string              getCertificado()           Returns the current record's "certificado" value
 * @method string              getDescripcion()           Returns the current record's "descripcion" value
 * @method string              getObservacion()           Returns the current record's "observacion" value
 * @method string              getOrden()                 Returns the current record's "orden" value
 * @method string              getImagen()                Returns the current record's "imagen" value
 * @method integer             getStatus()                Returns the current record's "status" value
 * @method date                getMantenimientoProximo()  Returns the current record's "mantenimiento_proximo" value
 * @method date                getMantenimientoUltimo()   Returns the current record's "mantenimiento_ultimo" value
 * @method integer             getUserId()                Returns the current record's "user_id" value
 * @method string              getUserName()              Returns the current record's "user_name" value
 * @method Empresa             getEmpresa()               Returns the current record's "Empresa" value
 * @method Marca               getMarca()                 Returns the current record's "Marca" value
 * @method Canastilla          getCanastilla()            Returns the current record's "Canastilla" value
 * @method Quemador            getQuemador()              Returns the current record's "Quemador" value
 * @method Ubicacion           getUbicacion()             Returns the current record's "Ubicacion" value
 * @method Doctrine_Collection getMantenimientoGlobo()    Returns the current record's "MantenimientoGlobo" collection
 * @method Globo               setId()                    Sets the current record's "id" value
 * @method Globo               setEmpresaId()             Sets the current record's "empresa_id" value
 * @method Globo               setUbicacionId()           Sets the current record's "ubicacion_id" value
 * @method Globo               setMarcaId()               Sets the current record's "marca_id" value
 * @method Globo               setCanastillaId()          Sets the current record's "canastilla_id" value
 * @method Globo               setQuemadorId()            Sets the current record's "quemador_id" value
 * @method Globo               setModelo()                Sets the current record's "modelo" value
 * @method Globo               setNumeroSerie()           Sets the current record's "numero_serie" value
 * @method Globo               setNombre()                Sets the current record's "nombre" value
 * @method Globo               setPesoLimite()            Sets the current record's "peso_limite" value
 * @method Globo               setPesoMaxVacio()          Sets the current record's "peso_max_vacio" value
 * @method Globo               setPesoMaxPasajeros()      Sets the current record's "peso_max_pasajeros" value
 * @method Globo               setCombustible()           Sets the current record's "combustible" value
 * @method Globo               setTamano()                Sets the current record's "tamano" value
 * @method Globo               setCantidadTanques()       Sets the current record's "cantidad_tanques" value
 * @method Globo               setCapacidad()             Sets the current record's "capacidad" value
 * @method Globo               setCertificado()           Sets the current record's "certificado" value
 * @method Globo               setDescripcion()           Sets the current record's "descripcion" value
 * @method Globo               setObservacion()           Sets the current record's "observacion" value
 * @method Globo               setOrden()                 Sets the current record's "orden" value
 * @method Globo               setImagen()                Sets the current record's "imagen" value
 * @method Globo               setStatus()                Sets the current record's "status" value
 * @method Globo               setMantenimientoProximo()  Sets the current record's "mantenimiento_proximo" value
 * @method Globo               setMantenimientoUltimo()   Sets the current record's "mantenimiento_ultimo" value
 * @method Globo               setUserId()                Sets the current record's "user_id" value
 * @method Globo               setUserName()              Sets the current record's "user_name" value
 * @method Globo               setEmpresa()               Sets the current record's "Empresa" value
 * @method Globo               setMarca()                 Sets the current record's "Marca" value
 * @method Globo               setCanastilla()            Sets the current record's "Canastilla" value
 * @method Globo               setQuemador()              Sets the current record's "Quemador" value
 * @method Globo               setUbicacion()             Sets the current record's "Ubicacion" value
 * @method Globo               setMantenimientoGlobo()    Sets the current record's "MantenimientoGlobo" collection
 * 
 * @package    hub-usmjesus
 * @subpackage model
 * @author     Jesus Salazar - usmjesus@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGlobo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('globo');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('ubicacion_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             ));
        $this->hasColumn('marca_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('canastilla_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             ));
        $this->hasColumn('quemador_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             ));
        $this->hasColumn('modelo', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('numero_serie', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('peso_limite', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 18,
             ));
        $this->hasColumn('peso_max_vacio', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 18,
             ));
        $this->hasColumn('peso_max_pasajeros', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 18,
             ));
        $this->hasColumn('combustible', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 18,
             ));
        $this->hasColumn('tamano', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             ));
        $this->hasColumn('cantidad_tanques', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             ));
        $this->hasColumn('capacidad', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             ));
        $this->hasColumn('certificado', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('orden', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('imagen', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('mantenimiento_proximo', 'date', null, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('mantenimiento_ultimo', 'date', null, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('user_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Marca', array(
             'local' => 'marca_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Canastilla', array(
             'local' => 'canastilla_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Quemador', array(
             'local' => 'quemador_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Ubicacion', array(
             'local' => 'ubicacion_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('MantenimientoGlobo', array(
             'local' => 'id',
             'foreign' => 'globo_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}