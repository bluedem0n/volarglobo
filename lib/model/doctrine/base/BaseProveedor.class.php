<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Proveedor', 'doctrine');

/**
 * BaseProveedor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $provincia_id
 * @property integer $ciudad_id
 * @property integer $categoria_id
 * @property string $rif
 * @property string $dni
 * @property string $nombre
 * @property string $nickname
 * @property string $direccion_fiscal
 * @property string $direccion_fisica
 * @property string $horario
 * @property string $telefono1
 * @property string $telefono2
 * @property string $email
 * @property string $website
 * @property string $contacto_nombre
 * @property string $contacto_puesto
 * @property integer $contacto_telefono
 * @property integer $status
 * @property string $descripcion
 * @property string $observacion
 * @property string $logo
 * @property string $video
 * @property string $redes_sociales
 * @property string $palabras_claves
 * @property integer $destacado
 * @property integer $click
 * @property integer $user_id
 * @property string $user_name
 * @property Empresa $Empresa
 * @property Provincia $Provincia
 * @property Ciudad $Ciudad
 * @property Categoria $Categoria
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $ProveedorSucursal
 * @property Doctrine_Collection $GaleriaProveedor
 * @property Doctrine_Collection $ProveedorDescuento
 * @property Doctrine_Collection $ProveedorRede
 * @property Doctrine_Collection $ProveedorPago
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getEmpresaId()          Returns the current record's "empresa_id" value
 * @method integer             getProvinciaId()        Returns the current record's "provincia_id" value
 * @method integer             getCiudadId()           Returns the current record's "ciudad_id" value
 * @method integer             getCategoriaId()        Returns the current record's "categoria_id" value
 * @method string              getRif()                Returns the current record's "rif" value
 * @method string              getDni()                Returns the current record's "dni" value
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method string              getNickname()           Returns the current record's "nickname" value
 * @method string              getDireccionFiscal()    Returns the current record's "direccion_fiscal" value
 * @method string              getDireccionFisica()    Returns the current record's "direccion_fisica" value
 * @method string              getHorario()            Returns the current record's "horario" value
 * @method string              getTelefono1()          Returns the current record's "telefono1" value
 * @method string              getTelefono2()          Returns the current record's "telefono2" value
 * @method string              getEmail()              Returns the current record's "email" value
 * @method string              getWebsite()            Returns the current record's "website" value
 * @method string              getContactoNombre()     Returns the current record's "contacto_nombre" value
 * @method string              getContactoPuesto()     Returns the current record's "contacto_puesto" value
 * @method integer             getContactoTelefono()   Returns the current record's "contacto_telefono" value
 * @method integer             getStatus()             Returns the current record's "status" value
 * @method string              getDescripcion()        Returns the current record's "descripcion" value
 * @method string              getObservacion()        Returns the current record's "observacion" value
 * @method string              getLogo()               Returns the current record's "logo" value
 * @method string              getVideo()              Returns the current record's "video" value
 * @method string              getRedesSociales()      Returns the current record's "redes_sociales" value
 * @method string              getPalabrasClaves()     Returns the current record's "palabras_claves" value
 * @method integer             getDestacado()          Returns the current record's "destacado" value
 * @method integer             getClick()              Returns the current record's "click" value
 * @method integer             getUserId()             Returns the current record's "user_id" value
 * @method string              getUserName()           Returns the current record's "user_name" value
 * @method Empresa             getEmpresa()            Returns the current record's "Empresa" value
 * @method Provincia           getProvincia()          Returns the current record's "Provincia" value
 * @method Ciudad              getCiudad()             Returns the current record's "Ciudad" value
 * @method Categoria           getCategoria()          Returns the current record's "Categoria" value
 * @method sfGuardUser         getSfGuardUser()        Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getProveedorSucursal()  Returns the current record's "ProveedorSucursal" collection
 * @method Doctrine_Collection getGaleriaProveedor()   Returns the current record's "GaleriaProveedor" collection
 * @method Doctrine_Collection getProveedorDescuento() Returns the current record's "ProveedorDescuento" collection
 * @method Doctrine_Collection getProveedorRede()      Returns the current record's "ProveedorRede" collection
 * @method Doctrine_Collection getProveedorPago()      Returns the current record's "ProveedorPago" collection
 * @method Proveedor           setId()                 Sets the current record's "id" value
 * @method Proveedor           setEmpresaId()          Sets the current record's "empresa_id" value
 * @method Proveedor           setProvinciaId()        Sets the current record's "provincia_id" value
 * @method Proveedor           setCiudadId()           Sets the current record's "ciudad_id" value
 * @method Proveedor           setCategoriaId()        Sets the current record's "categoria_id" value
 * @method Proveedor           setRif()                Sets the current record's "rif" value
 * @method Proveedor           setDni()                Sets the current record's "dni" value
 * @method Proveedor           setNombre()             Sets the current record's "nombre" value
 * @method Proveedor           setNickname()           Sets the current record's "nickname" value
 * @method Proveedor           setDireccionFiscal()    Sets the current record's "direccion_fiscal" value
 * @method Proveedor           setDireccionFisica()    Sets the current record's "direccion_fisica" value
 * @method Proveedor           setHorario()            Sets the current record's "horario" value
 * @method Proveedor           setTelefono1()          Sets the current record's "telefono1" value
 * @method Proveedor           setTelefono2()          Sets the current record's "telefono2" value
 * @method Proveedor           setEmail()              Sets the current record's "email" value
 * @method Proveedor           setWebsite()            Sets the current record's "website" value
 * @method Proveedor           setContactoNombre()     Sets the current record's "contacto_nombre" value
 * @method Proveedor           setContactoPuesto()     Sets the current record's "contacto_puesto" value
 * @method Proveedor           setContactoTelefono()   Sets the current record's "contacto_telefono" value
 * @method Proveedor           setStatus()             Sets the current record's "status" value
 * @method Proveedor           setDescripcion()        Sets the current record's "descripcion" value
 * @method Proveedor           setObservacion()        Sets the current record's "observacion" value
 * @method Proveedor           setLogo()               Sets the current record's "logo" value
 * @method Proveedor           setVideo()              Sets the current record's "video" value
 * @method Proveedor           setRedesSociales()      Sets the current record's "redes_sociales" value
 * @method Proveedor           setPalabrasClaves()     Sets the current record's "palabras_claves" value
 * @method Proveedor           setDestacado()          Sets the current record's "destacado" value
 * @method Proveedor           setClick()              Sets the current record's "click" value
 * @method Proveedor           setUserId()             Sets the current record's "user_id" value
 * @method Proveedor           setUserName()           Sets the current record's "user_name" value
 * @method Proveedor           setEmpresa()            Sets the current record's "Empresa" value
 * @method Proveedor           setProvincia()          Sets the current record's "Provincia" value
 * @method Proveedor           setCiudad()             Sets the current record's "Ciudad" value
 * @method Proveedor           setCategoria()          Sets the current record's "Categoria" value
 * @method Proveedor           setSfGuardUser()        Sets the current record's "sfGuardUser" value
 * @method Proveedor           setProveedorSucursal()  Sets the current record's "ProveedorSucursal" collection
 * @method Proveedor           setGaleriaProveedor()   Sets the current record's "GaleriaProveedor" collection
 * @method Proveedor           setProveedorDescuento() Sets the current record's "ProveedorDescuento" collection
 * @method Proveedor           setProveedorRede()      Sets the current record's "ProveedorRede" collection
 * @method Proveedor           setProveedorPago()      Sets the current record's "ProveedorPago" collection
 * 
 * @package    hub-usmjesus
 * @subpackage model
 * @author     Jesus Salazar - usmjesus@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProveedor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('proveedor');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('provincia_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             ));
        $this->hasColumn('ciudad_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             ));
        $this->hasColumn('categoria_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('rif', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('dni', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('nombre', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('nickname', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('direccion_fiscal', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('direccion_fisica', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('horario', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('telefono1', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('telefono2', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('email', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => true,
             'length' => 40,
             ));
        $this->hasColumn('website', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 40,
             ));
        $this->hasColumn('contacto_nombre', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 30,
             ));
        $this->hasColumn('contacto_puesto', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 30,
             ));
        $this->hasColumn('contacto_telefono', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('logo', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('video', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('redes_sociales', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('palabras_claves', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('destacado', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('click', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('user_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Provincia', array(
             'local' => 'provincia_id',
             'foreign' => 'id'));

        $this->hasOne('Ciudad', array(
             'local' => 'ciudad_id',
             'foreign' => 'id'));

        $this->hasOne('Categoria', array(
             'local' => 'categoria_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('ProveedorSucursal', array(
             'local' => 'id',
             'foreign' => 'proveedor_id'));

        $this->hasMany('GaleriaProveedor', array(
             'local' => 'id',
             'foreign' => 'proveedor_id'));

        $this->hasMany('ProveedorDescuento', array(
             'local' => 'id',
             'foreign' => 'proveedor_id'));

        $this->hasMany('ProveedorRede', array(
             'local' => 'id',
             'foreign' => 'proveedor_id'));

        $this->hasMany('ProveedorPago', array(
             'local' => 'id',
             'foreign' => 'proveedor_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'nombre',
             ),
             'uniqueBy' => 
             array(
              0 => 'nombre',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}