<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Ciudad', 'doctrine');

/**
 * BaseCiudad
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $provincia_id
 * @property integer $provincia_final_id
 * @property string $codigo
 * @property string $nombre
 * @property integer $status
 * @property string $observacion
 * @property integer $user_id
 * @property string $user_name
 * @property Empresa $Empresa
 * @property Provincia $Provincia
 * @property Provincia $Provincia2
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Proveedor
 * @property Doctrine_Collection $Ubicacion
 * @property Doctrine_Collection $Hospedaje
 * @property Doctrine_Collection $VehiculoPrecio
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getEmpresaId()          Returns the current record's "empresa_id" value
 * @method integer             getProvinciaId()        Returns the current record's "provincia_id" value
 * @method integer             getProvinciaFinalId()   Returns the current record's "provincia_final_id" value
 * @method string              getCodigo()             Returns the current record's "codigo" value
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method integer             getStatus()             Returns the current record's "status" value
 * @method string              getObservacion()        Returns the current record's "observacion" value
 * @method integer             getUserId()             Returns the current record's "user_id" value
 * @method string              getUserName()           Returns the current record's "user_name" value
 * @method Empresa             getEmpresa()            Returns the current record's "Empresa" value
 * @method Provincia           getProvincia()          Returns the current record's "Provincia" value
 * @method Provincia           getProvincia2()         Returns the current record's "Provincia2" value
 * @method sfGuardUser         getSfGuardUser()        Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getProveedor()          Returns the current record's "Proveedor" collection
 * @method Doctrine_Collection getUbicacion()          Returns the current record's "Ubicacion" collection
 * @method Doctrine_Collection getHospedaje()          Returns the current record's "Hospedaje" collection
 * @method Doctrine_Collection getVehiculoPrecio()     Returns the current record's "VehiculoPrecio" collection
 * @method Ciudad              setId()                 Sets the current record's "id" value
 * @method Ciudad              setEmpresaId()          Sets the current record's "empresa_id" value
 * @method Ciudad              setProvinciaId()        Sets the current record's "provincia_id" value
 * @method Ciudad              setProvinciaFinalId()   Sets the current record's "provincia_final_id" value
 * @method Ciudad              setCodigo()             Sets the current record's "codigo" value
 * @method Ciudad              setNombre()             Sets the current record's "nombre" value
 * @method Ciudad              setStatus()             Sets the current record's "status" value
 * @method Ciudad              setObservacion()        Sets the current record's "observacion" value
 * @method Ciudad              setUserId()             Sets the current record's "user_id" value
 * @method Ciudad              setUserName()           Sets the current record's "user_name" value
 * @method Ciudad              setEmpresa()            Sets the current record's "Empresa" value
 * @method Ciudad              setProvincia()          Sets the current record's "Provincia" value
 * @method Ciudad              setProvincia2()         Sets the current record's "Provincia2" value
 * @method Ciudad              setSfGuardUser()        Sets the current record's "sfGuardUser" value
 * @method Ciudad              setProveedor()          Sets the current record's "Proveedor" collection
 * @method Ciudad              setUbicacion()          Sets the current record's "Ubicacion" collection
 * @method Ciudad              setHospedaje()          Sets the current record's "Hospedaje" collection
 * @method Ciudad              setVehiculoPrecio()     Sets the current record's "VehiculoPrecio" collection
 * 
 * @package    hub-usmjesus
 * @subpackage model
 * @author     Jesus Salazar - usmjesus@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCiudad extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ciudad');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('provincia_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('provincia_final_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('codigo', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'default' => 1,
             ));
        $this->hasColumn('user_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Provincia', array(
             'local' => 'provincia_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Provincia as Provincia2', array(
             'local' => 'provincia_final_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Proveedor', array(
             'local' => 'id',
             'foreign' => 'ciudad_id'));

        $this->hasMany('Ubicacion', array(
             'local' => 'id',
             'foreign' => 'ciudad_id'));

        $this->hasMany('Hospedaje', array(
             'local' => 'id',
             'foreign' => 'ciudad_id'));

        $this->hasMany('VehiculoPrecio', array(
             'local' => 'id',
             'foreign' => 'ciudad_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}